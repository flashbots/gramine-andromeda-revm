# Rust manifest example

loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ self_exe }}"
loader.log_level = "{{ log_level }}"
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}"

# See https://gramine.readthedocs.io/en/stable/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

# For easier debugging â€” not strictly required to run this workload
loader.env.RUST_BACKTRACE = "full"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/etc", uri = "file:/etc" },
  # For providing input through trusted or host-provided input files
  # { path = "/var/sgx-revm-data/", uri = "file:data" },
]

sys.insecure__allow_eventfd = true

sgx.debug = false
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}

# Enabling remote attestation
sgx.remote_attestation = "dcap"

sys.enable_extra_runtime_domain_names_conf = true


sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ self_exe }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:/usr/{{ arch_libdir }}/",
  "file:/etc/ssl/certs/ca-certificates.crt",
  "file:/usr/lib/ssl/certs/",
]

#sgx.allowed_files = [
#]

sgx.max_threads = 96
